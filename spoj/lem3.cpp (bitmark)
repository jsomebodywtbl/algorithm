#include <bits/stdc++.h>
using namespace std;
 
int main() {
	int n;
	cin >> n;
	vector<vector<int>> a(n, vector<int>(n));
	for (int i = 0; i < n; ++i) {
		for (int j = 0; j < n; ++j) {
			cin >> a[i][j];
		}
	}
	int m = 1 << n;
	vector<vector<int>> dp(m, vector<int>(n, (int) 1e9));
	for (int i = 0; i < n; ++i) {
		dp[0][i] = 0;
		dp[1 << i][i] = 0;
	}
	auto get_dp = [&](int bit) {
		vector<int> s;
		for (int i = 0, tmp = bit; i < n; ++i) {
			if (tmp & 1) {
				s.push_back(i);
			}
			tmp >>= 1;
		}
		if (s.size() < 2) {
			return;
		}
		for (auto i: s) {
			int prev = bit ^ (1 << i);
			for (auto j: s) if (j != i) {
				dp[bit][i] = min(dp[bit][i], dp[prev][j] + a[j][i]);
			}
		} 
	};
	for (int bit = 1; bit < m; ++bit) 
		get_dp(bit);
	int ans = dp[m - 1][0];
	for (int i = 1; i < n; ++i) 
		ans = min(ans, dp[m - 1][i]);
	cout << ans;
	return 0;
} 
